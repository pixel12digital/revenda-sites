# COMANDOS PARA EXECUTAR NA VPS
# Acesse a VPS: ssh root@212.85.11.238
# Execute os comandos abaixo:

# 1. Navegar para o diretório
cd /var/whatsapp-api

# 2. Fazer backup
cp whatsapp-api-server.js whatsapp-api-server.js.backup

# 3. Verificar se o backup foi criado
ls -la *.backup

# 4. Editar o arquivo
nano whatsapp-api-server.js

# 5. LOCALIZAR a linha onde está o endpoint /session/:sessionName/status
# (procure por: app.get('/session/:sessionName/status', (req, res) => {)

# 6. ADICIONAR APÓS essa linha os seguintes endpoints:

// Endpoint específico para QR Code
app.get('/qr', (req, res) => {
    const sessionName = req.query.session || 'default';
    
    if (!whatsappClients[sessionName]) {
        return res.status(404).json({
            success: false,
            message: `Sessão ${sessionName} não encontrada`,
            suggestion: 'Inicie uma sessão primeiro usando POST /session/start/default'
        });
    }
    
    const status = clientStatus[sessionName];
    
    if (!status) {
        return res.status(503).json({
            success: false,
            message: 'Status da sessão não disponível'
        });
    }
    
    if (status.status === 'connected') {
        return res.json({
            success: true,
            qr: null,
            ready: true,
            message: 'WhatsApp já está conectado',
            status: 'connected'
        });
    }
    
    if (status.status === 'qr_ready' && status.qr) {
        return res.json({
            success: true,
            qr: status.qr,
            ready: false,
            message: 'QR Code disponível para escaneamento',
            status: 'qr_ready'
        });
    }
    
    return res.status(503).json({
        success: false,
        qr: null,
        ready: false,
        message: 'QR Code não disponível no momento',
        status: status.status,
        suggestion: 'Aguarde alguns segundos e tente novamente'
    });
});

// Endpoint para QR Code da sessão default (compatibilidade)
app.get('/qr/default', (req, res) => {
    // Redirecionar para o endpoint principal
    res.redirect('/qr?session=default');
});

// Endpoint para QR Code da sessão específica
app.get('/qr/:sessionName', (req, res) => {
    const { sessionName } = req.params;
    res.redirect(`/qr?session=${sessionName}`);
});

# 7. Salvar o arquivo no nano:
# - Pressione Ctrl + X
# - Pressione Y para confirmar
# - Pressione Enter para salvar

# 8. Reiniciar o servidor
pm2 restart whatsapp-api

# 9. Verificar se reiniciou corretamente
pm2 status

# 10. Testar o endpoint QR
curl http://localhost:3000/qr

# 11. Verificar logs se necessário
pm2 logs whatsapp-api

# RESULTADO ESPERADO:
# O endpoint /qr deve retornar 200 com o QR code
# O frontend deve conseguir buscar o QR code
# O WhatsApp deve conectar normalmente 